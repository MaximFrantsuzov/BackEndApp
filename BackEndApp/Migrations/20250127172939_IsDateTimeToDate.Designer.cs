// <auto-generated />
using System;
using BackEndApp.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEndApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250127172939_IsDateTimeToDate")]
    partial class IsDateTimeToDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackEndApp.Core.Entities.Departament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameDepartament")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubdivisionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubdivisionId");

                    b.ToTable("Departamentes");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartamentId")
                        .HasColumnType("int");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelEducation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TitleJobId")
                        .HasColumnType("int");

                    b.Property<bool>("isDismissal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentId");

                    b.HasIndex("TitleJobId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.HistoryDepartament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateChangeHistory")
                        .HasColumnType("date");

                    b.Property<int>("DepartamentId")
                        .HasColumnType("int");

                    b.Property<string>("TypeEventDepSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartamentId");

                    b.ToTable("HistoryDepartamentes");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.HistorySubdivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateChangeHistory")
                        .HasColumnType("date");

                    b.Property<int>("SubdivisionId")
                        .HasColumnType("int");

                    b.Property<string>("TypeEventDepSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubdivisionId");

                    b.ToTable("HistorySubdivisions");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameJobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.Subdivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameSubdivision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subdivisions");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.WorkActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date_Event")
                        .HasColumnType("date");

                    b.Property<int>("DepartamentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeEventEmployee")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkActivities");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.Departament", b =>
                {
                    b.HasOne("BackEndApp.Core.Entities.Subdivision", "Subdivision")
                        .WithMany("Departaments")
                        .HasForeignKey("SubdivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subdivision");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.Employee", b =>
                {
                    b.HasOne("BackEndApp.Core.Entities.Departament", "Departament")
                        .WithMany("Employees")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BackEndApp.Core.Entities.JobTitle", "JobTitle")
                        .WithMany("Employees")
                        .HasForeignKey("TitleJobId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departament");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.HistoryDepartament", b =>
                {
                    b.HasOne("BackEndApp.Core.Entities.Departament", "Departament")
                        .WithMany("HistoryDepartaments")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departament");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.HistorySubdivision", b =>
                {
                    b.HasOne("BackEndApp.Core.Entities.Subdivision", "Subdivision")
                        .WithMany("HistorySubdivisions")
                        .HasForeignKey("SubdivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subdivision");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.WorkActivity", b =>
                {
                    b.HasOne("BackEndApp.Core.Entities.Departament", "Departament")
                        .WithMany("WorkActivities")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEndApp.Core.Entities.Employee", "Employee")
                        .WithMany("WorkActivities")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departament");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.Departament", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("HistoryDepartaments");

                    b.Navigation("WorkActivities");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.Employee", b =>
                {
                    b.Navigation("WorkActivities");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.JobTitle", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BackEndApp.Core.Entities.Subdivision", b =>
                {
                    b.Navigation("Departaments");

                    b.Navigation("HistorySubdivisions");
                });
#pragma warning restore 612, 618
        }
    }
}
